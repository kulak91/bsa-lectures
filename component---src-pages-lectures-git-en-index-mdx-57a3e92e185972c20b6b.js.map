{"version":3,"file":"component---src-pages-lectures-git-en-index-mdx-57a3e92e185972c20b6b.js","mappings":"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","sources":["webpack://test/./src/mdx-wrappers/Lecture/Lecture.tsx","webpack://test/./src/utils/is-date-in-the-past/isDateInThePast.ts","webpack://test/./src/pages/lectures/git/assets/resume_template.png","webpack://test/./src/pages/lectures/git/en/index.mdx","webpack://test/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import React from \"react\";\nimport { isDateInThePast } from \"~/utils\";\n// import { SEO, Header, Footer, ShrugMessage } from \"..\";\n// import { isDateInThePast } from \"../../utils\";\n// import \"prismjs/themes/prism.css\";\nimport \"./Lecture.css\";\n\ntype Meta = {\n  author?: string;\n  orderId: number;\n  title: string;\n  duration?: string;\n  description: string;\n  keywords: string[];\n  publishedAt: string;\n  hiddenFromMainPage: boolean;\n};\n\ntype FrontMatter = {\n  frontmatter: Meta;\n};\ntype LectureProps = {\n  children: React.ReactNode;\n  pageContext: FrontMatter;\n};\n\nconst Lecture = ({\n  children,\n  pageContext: {\n    frontmatter: {\n      description,\n      hiddenFromMainPage,\n      keywords,\n      orderId,\n      publishedAt,\n      title,\n      author,\n      duration,\n    },\n  },\n}: LectureProps) => {\n  const isPublished = isDateInThePast(publishedAt);\n  return (\n    <>\n      <div className=\"container grid-lg\">\n        <div className=\"columns\">\n          <div className=\"column\">\n            {/* <Header /> */}\n            <article className=\"content\">\n              {isPublished ? (\n                children\n              ) : (\n                <>\n                  <h4>\n                    ‚Äî –ü—Ä–æ–±–∞—á, –∞–ª–µ –ª–µ–∫—Ü—ñ—è <strong>¬´{title}¬ª</strong> —â–µ –Ω–µ\n                    –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–∞.\n                  </h4>\n                  <p>–ó–∞–≥–ª—è–Ω—å —Å—é–¥–∏ —Ç—Ä—ñ—à–∫–∏ –ø—ñ–∑–Ω—ñ—à–µ, –±—É–¥—å –ª–∞—Å–∫–∞.</p>\n                </>\n              )}\n            </article>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Lecture;\n","export const isDateInThePast = (date: string) =>\n  date && new Date(date).getTime() <= new Date().getTime();\n","export default __webpack_public_path__ + \"static/resume_template-8f3c289eb7670087b0825d1f0150e15b.png\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Lecture} from \"~/mdx-wrappers\";\nimport resume_template from \"../assets/resume_template.png\";\nconst MDXLayout = Lecture;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", null, React.createElement(\"h1\", null, React.createElement(\"strong\", null, \"Git Homework\"))), \"\\n\", React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"author\"\n  }, React.createElement(\"div\", {\n    className: \"profile\"\n  }, React.createElement(\"h3\", {\n    className: \"name\"\n  }, \"Viktoriia Vasylenko\"), \"\\n\", React.createElement(\"p\", {\n    className: \"about\"\n  }, \"Viktoriia works at Binary Studio as a Full stack developer after\\nfinishing Binary Studio Academy in 2020.\"), React.createElement(\"img\", {\n    src: resume_template\n  }))), React.createElement(\"div\", {\n    className: \"bubble\",\n    style: {\n      margin: \"-0.5em 1em 1em\"\n    }\n  }, React.createElement(_components.p, null, React.createElement(\"strong\", null, \"Hi, student!\"), \" üëã\"), React.createElement(\"br\"), React.createElement(_components.p, null, \"Here you'll find a detailed instruction to your Git homework - so you just\\nneed to follow the steps and it's done ‚úÖ. But firstly, pay attention to\\nthat:\"), React.createElement(\"ol\", {\n    className: \"compact inverted\"\n  }, React.createElement(\"li\", null, React.createElement(_components.p, null, \"this is \", React.createElement(\"strong\", null, \"not\"), \" a lecture script - some explanations may be\\nomitted \", React.createElement(\"em\", null, \"(because you've just seen the lecture, right?)\"), \";\")), React.createElement(\"li\", null, React.createElement(_components.p, null, \"I highly recommend you to look throught all the tasks before you start your homework.\\nPay attention, that \", React.createElement(\"strong\", null, \"you have only 3 attempt\"), \" to run the automated test.\")), React.createElement(\"li\", null, React.createElement(_components.p, null, \"links to the documentations and guidelines are optional\", \" \", \"\\n\", React.createElement(\"em\", null, \"(you may ignore them if you feel strong enough)\"), \";\")), React.createElement(\"li\", null, React.createElement(_components.p, null, \"please \", React.createElement(\"strong\", null, \"don't skip\"), \" any steps and don't rename anything -\\nwe'll run automated test after you submit the homework and namings may\\nbe important!\")), React.createElement(\"li\", null, \"and if you have any questions - feel free to ask them in a chat\")), React.createElement(_components.p, null, \"By the way, it's dangerous to go alone! Take this:\", \" \"), React.createElement(\"a\", {\n    href: \"https://git-scm.com/\"\n  }, React.createElement(\"strong\", null, \"Git\")), React.createElement(_components.p, null, \",\", \" \"), React.createElement(\"a\", {\n    href: \"https://code.visualstudio.com/\"\n  }, React.createElement(\"strong\", null, \"Visual Studio Code\")), React.createElement(_components.p, null, \". Now let's go!\"))));\n}\nfunction MDXContent(props = {}) {\n  return React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props));\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_ref","children","pageContext","frontmatter","description","hiddenFromMainPage","keywords","orderId","publishedAt","title","author","duration","isPublished","date","Date","getTime","React","className","MDXLayout","Lecture","_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","src","resume_template","style","margin","href","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}